[package]
name = "salvo_core"
version.workspace = true
authors = ["Chrislearn Young <chrislearn@hotmail.com>", "driftluo <driftluo@foxmail.com>"]
edition.workspace = true
description.workspace = true
homepage.workspace = true
repository.workspace = true
readme.workspace = true
keywords.workspace = true
license.workspace = true
categories.workspace = true

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[features]
default = ["cookie", "http1", "fix-http1-request-uri", "http2", "test"]
full = ["cookie", "http1", "fix-http1-request-uri", "http2", "quinn", "rustls", "native-tls", "openssl", "unix", "test", "anyhow", "eyre"]
cookie = ["dep:cookie"]
http1 = []
fix-http1-request-uri = ["http1"]
http2 = []
quinn = ["dep:h3", "dep:h3-quinn", "dep:quinn", "rustls"]
rustls = ["http1", "http2", "dep:tokio-rustls", "dep:rustls-pemfile"]
native-tls = ["http1", "http2", "dep:tokio-native-tls", "dep:native-tls"]
openssl = ["http2", "dep:openssl", "dep:tokio-openssl"]
unix = ["http1"]
test = ["dep:async-compression", "dep:base64", "dep:encoding_rs", "dep:serde_urlencoded", "dep:url", "tokio/macros"]
acme = ["http1", "http2", "dep:base64", "hyper/client", "dep:hyper-rustls", "dep:rcgen", "dep:ring", "dep:x509-parser", "dep:tokio-rustls", "dep:rustls-pemfile"]

[dependencies]
cruet.workspace = true
anyhow = { workspace = true, optional = true }
async-compression = { workspace = true, features = ["brotli", "deflate", "gzip", "tokio"], optional = true }
async-trait.workspace = true
base64 = { workspace = true, optional = true }
http-body-util.workspace = true
bytes.workspace = true
cookie = { workspace = true, features = ["percent-encode"], optional = true }
encoding_rs = { workspace = true, optional = true }
enumflags2.workspace = true
eyre = { workspace = true, optional = true }
fastrand.workspace = true
form_urlencoded.workspace = true
futures-util = { workspace = true, features = ["io"] }
headers.workspace = true
http.workspace = true
hyper = { workspace = true, features = ["http1", "http2", "client", "server"] }
hyper-util = { workspace = true, features = ["runtime", "http1", "http2", "tcp", "client"] }
hyper-rustls = { workspace = true, optional = true }
mime.workspace = true
mime_guess.workspace = true
multer.workspace = true
multimap = { workspace = true, features = ["serde"] }
once_cell.workspace = true
percent-encoding.workspace = true
pin-project = { workspace = true }
parking_lot.workspace = true
quinn = { workspace = true, optional = true, features = ["runtime-tokio", "ring", "tls-rustls"] }
rcgen = { workspace = true, optional = true }
regex.workspace = true
ring = { workspace = true, optional = true }
rustls-pemfile = { workspace = true, optional = true }
h3 = { workspace = true, optional = true }
salvo_macros.workspace = true
h3-quinn = { workspace = true, optional = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true, features = ["raw_value"] }
serde_urlencoded = { workspace = true, optional = true }
tempfile.workspace = true
textnonce.workspace = true
thiserror.workspace = true
openssl = { workspace = true, optional = true }
tokio = { workspace = true, features = ["fs", "macros", "net", "rt-multi-thread"] }
tokio-native-tls = { workspace = true, optional = true }
native-tls = { workspace = true, optional = true, features = ["alpn"] }
tokio-rustls = { workspace = true, optional = true }
tokio-openssl = { workspace = true, optional = true }
tokio-stream.workspace = true
tracing.workspace = true
url = { workspace = true, optional = true }
x509-parser = { workspace = true, optional = true }
